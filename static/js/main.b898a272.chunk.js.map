{"version":3,"sources":["config.js","pages/HomePage.js","pages/ProfilePage.js","pages/RegisterPage.js","Routes.js","App.js","registerServiceWorker.js","index.js","assets/default-image.jpg"],"names":["exports","main_config","APP_URL","TOKEN_APP","today","Date","getTime","DateTimeThai","datetime","format","date","split","date_str","time_str","new_date","10","11","12","parseInt","new_time","HomePage","props","history","useHistory","useState","userid","setUserID","docno","setDocno","startdate","setStartDate","starttime","setStartTime","enddate","setEndDate","endtime","setEndTime","meetingHost","setMeetingHost","meetingRoom","setMeetingRoom","humanAmount","setHumanAmount","humenTotal","setHumanTotal","isMeeting","setIsMeeting","isCheckIn","setIsCheckIn","isCheckOut","setIsCheckOut","isTimeMeeting","setIsTimeMeeting","CheckUser","a","base_url","config","header","Authorization","axios","post","headers","then","resp","data","length","userId","localStorage","setItem","JSON","stringify","data_info","removeItem","push","catch","error","console","log","useEffect","liff","init","liffId","getProfile","profile","err","alert","message","str","location","search","params","meetingid","get","code","startDate","start_date","endDate","end_date","meeting_host_name","meeting_name","human_amount","total","total_meeting","getMeeting","check_in_date","check_out_date","getCheckInCheckOut","color","className","style","height","type","duration","md","getItem","fontSize","gradient","size","onClick","Swal","fire","title","text","check_date","showDenyButton","showCancelButton","showCloseButton","confirmButtonText","result","isConfirmed","window","reload","msg","icon","checkIn","checkOut","floating","rounded","paddingBottom","jwt","require","ProfilePage","Component","constructor","super","this","state","pname","fname","lname","idcard","email","position","department","government","phone","isChange","handleChange","bind","submitHandler","LoadDataUser","event","names","target","name","val","value","setState","preventDefault","formData","token","showConfirmButton","setTimeout","user","decoded","verify","parse","componentDidMount","render","src","DefaultImg","width","alt","onSubmit","htmlFor","onChange","required","RegisterPage","setPname","setFname","setLname","setIDcard","setEmail","setPosition","setDepartment","setGovernment","setPhoneNumber","id","readOnly","Routes","React","exact","path","component","pkgVersion","version","App","collapseID","displayName","urlPicture","toggleCollapse","prevState","closeCollapse","collID","scrollTo","overlay","backgroundColor","dark","expand","fixed","scrolling","href","isOpen","navbar","right","to","marginTop","textAlign","cursor","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker","module"],"mappings":"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","file":"static/js/main.b898a272.chunk.js","sourcesContent":["exports.main_config = {\r\n  APP_URL: \"https://api-reh-1meeting-forward.herokuapp.com\",\r\n  TOKEN_APP: \"d7073ee6cc586814598f5e91c398ccf0a2976b91927b9d55190fa12ac95acd0a85d7eff3050bb94e05c3263b7b3d7faad64b5f1ab4c8d972379551ad0789aeaf\"\r\n};\r\n// exports.main_config = {\r\n//   APP_URL: \"http://61.19.127.228:5050/api/v1\",\r\n//   TOKEN_APP: \"d7073ee6cc586814598f5e91c398ccf0a2976b91927b9d55190fa12ac95acd0a85d7eff3050bb94e05c3263b7b3d7faad64b5f1ab4c8d972379551ad0789aeaf\"\r\n// };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport liff from \"@line/liff\";\r\nimport config from \"../config\";\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBAnimation,\r\n  MDBBtn,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport \"./HomePage.css\";\r\nlet today = new Date().getTime();\r\nfunction DateTimeThai(datetime, format) {\r\n  let thmonth = {\r\n    \"01\": \"มกราคม\",\r\n    \"02\": \"กุมภาพันธ์\",\r\n    \"03\": \"มีนาคม\",\r\n    \"04\": \"เมษายน\",\r\n    \"05\": \"พฤษภาคม\",\r\n    \"06\": \"มิถุนายน\",\r\n    \"07\": \"กรกฎาคม\",\r\n    \"08\": \"สิงหาคม\",\r\n    \"09\": \"กันยายน\",\r\n    10: \"ตุลาคม\",\r\n    11: \"พฤศจิกายน\",\r\n    12: \"ธันวาคม\",\r\n  };\r\n  let createdDate = \"\";\r\n  let date = datetime.split(\" \");\r\n  let date_str = date[0].split(\"-\");\r\n  let time_str = date[1].split(\":\");\r\n  let new_date = `${date_str[2]} ${thmonth[date_str[1]]} ${\r\n    parseInt(date_str[0]) + 543\r\n  }`;\r\n  let new_time = `${time_str[0]}:${time_str[1]}น.`;\r\n  if (format === 1) {\r\n    createdDate = new_date;\r\n  } else if (format === 2) {\r\n    createdDate = new_time;\r\n  } else {\r\n    createdDate = new_date + \" \" + new_time;\r\n  }\r\n  return createdDate;\r\n}\r\n\r\nconst HomePage = (props) => {\r\n  const history = useHistory();\r\n  const [userid, setUserID] = useState(\"\");\r\n  const [docno, setDocno] = useState(\"\");\r\n  const [startdate, setStartDate] = useState(\"\");\r\n  const [starttime, setStartTime] = useState(\"\");\r\n  const [enddate, setEndDate] = useState(\"\");\r\n  const [endtime, setEndTime] = useState(\"\");\r\n  const [meetingHost, setMeetingHost] = useState(\"\");\r\n  const [meetingRoom, setMeetingRoom] = useState(\"\");\r\n  const [humanAmount, setHumanAmount] = useState(\"\");\r\n  const [humenTotal, setHumanTotal] = useState(\"\");\r\n  const [isMeeting, setIsMeeting] = useState(false);\r\n  const [isCheckIn, setIsCheckIn] = useState(\"\");\r\n  const [isCheckOut, setIsCheckOut] = useState(\"\");\r\n  const [isTimeMeeting, setIsTimeMeeting] = useState(0);\r\n\r\n  const CheckUser = async () => {\r\n    const base_url = `${config.main_config.APP_URL}/user`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    await axios\r\n      .post(base_url, { userid: userid }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.data.length > 0) {\r\n          setUserID(resp.data.data[0].userId);\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify(resp.data.data[0].data_info)\r\n          );\r\n          localStorage.setItem(\r\n            \"userid\",\r\n            JSON.stringify(resp.data.data[0].userId)\r\n          );\r\n        } else {\r\n          localStorage.removeItem(\"user\");\r\n          localStorage.removeItem(\"userid\");\r\n          history.push(\"/reh-1meeting-app/register\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const getMeeting = (meetingid) => {\r\n    const docno = meetingid;\r\n    const base_url = `${config.main_config.APP_URL}/getMeetingByDocno/${docno}`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .get(base_url, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.code === 200) {\r\n          let startDate = new Date(resp.data.data[0].start_date).getTime();\r\n          let endDate = new Date(resp.data.data[0].end_date).getTime();\r\n          if ((startDate - today) / 1000 > 1800) {\r\n            setIsTimeMeeting(1);\r\n          }\r\n          if (today > endDate) {\r\n            setIsTimeMeeting(2);\r\n          }\r\n          setDocno(resp.data.data[0].docno);\r\n          setStartDate(DateTimeThai(resp.data.data[0].start_date, 1));\r\n          setStartTime(DateTimeThai(resp.data.data[0].start_date, 2));\r\n          setEndDate(DateTimeThai(resp.data.data[0].end_date, 1));\r\n          setEndTime(DateTimeThai(resp.data.data[0].end_date, 2));\r\n          setMeetingHost(resp.data.data[0].meeting_host_name);\r\n          setMeetingRoom(resp.data.data[0].meeting_name);\r\n          setHumanAmount(resp.data.data[0].human_amount);\r\n          setHumanTotal(resp.data.total[0].total_meeting);\r\n\r\n          setIsMeeting(true);\r\n          localStorage.setItem(\"isMeeting\", \"true\");\r\n        } else if (resp.data.code === 400) {\r\n          localStorage.setItem(\"isMeeting\", \"false\");\r\n          // if (params !== \"\") {\r\n          //   Swal.fire({\r\n          //     title: \"แจ้งเตือน\",\r\n          //     text: resp.data.msg,\r\n          //     icon: \"error\",\r\n          //   });\r\n          // }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const checkIn = (userid, meetingid) => {\r\n    const base_url = `${config.main_config.APP_URL}/saveCheckIn`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .post(base_url, { userid: userid, docno: meetingid }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.code === 200) {\r\n          Swal.fire({\r\n            title: \"เช็คอินเข้าประชุมเรียบร้อย\",\r\n            text: `เวลา ${DateTimeThai(\r\n              resp.data.check_date[0].check_in_date,\r\n              3\r\n            )}`,\r\n            showDenyButton: false,\r\n            showCancelButton: false,\r\n            showCloseButton: false,\r\n            confirmButtonText: `ตกลง`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              window.location.reload();\r\n            }\r\n          });\r\n        } else if (resp.data.code === 400) {\r\n          Swal.fire({\r\n            title: \"แจ้งเตือน\",\r\n            text: resp.data.msg,\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const checkOut = (userid, meetingid) => {\r\n    const base_url = `${config.main_config.APP_URL}/saveCheckOut`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .post(base_url, { userid: userid, docno: meetingid }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.code === 200) {\r\n          Swal.fire({\r\n            title: \"เช็คเอ้าท์ออกจากประชุมเรียบร้อย\",\r\n            text: `เวลา ${DateTimeThai(\r\n              resp.data.check_date[0].check_out_date,\r\n              3\r\n            )}`,\r\n            showDenyButton: false,\r\n            showCancelButton: false,\r\n            showCloseButton: false,\r\n            confirmButtonText: `ตกลง`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              window.location.reload();\r\n            }\r\n          });\r\n        } else if (resp.data.code === 400) {\r\n          Swal.fire({\r\n            title: \"แจ้งเตือน\",\r\n            text: resp.data.msg,\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const getCheckInCheckOut = (meetingid) => {\r\n    const base_url = `${config.main_config.APP_URL}/getCheckInCheckOut/${userid}/${meetingid}`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .get(base_url, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.code === 200) {\r\n          setIsCheckIn(\r\n            resp.data.data[0].check_in_date !== null\r\n              ? DateTimeThai(resp.data.data[0].check_in_date, 3)\r\n              : \"\"\r\n          );\r\n          setIsCheckOut(\r\n            resp.data.data[0].check_out_date !== null\r\n              ? DateTimeThai(resp.data.data[0].check_out_date, 3)\r\n              : \"\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const InitailizeLiff = () => {\r\n    liff.init(\r\n      {\r\n        liffId: \"1655384297-05KyLy7Z\",\r\n      },\r\n      () => {\r\n        liff\r\n            .getProfile()\r\n            .then((profile) => {\r\n              setUserID(profile.userId)\r\n              localStorage.setItem(\"profile-line\", JSON.stringify(profile))\r\n            })\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    CheckUser();\r\n    InitailizeLiff();\r\n    const queryString = props.location.search;\r\n    let str = queryString.split(\"=\");\r\n    const params = str.length > 0 ? str[1] : \"\";\r\n    if (params !== \"\") {\r\n      getMeeting(params);\r\n      getCheckInCheckOut(params);\r\n    }\r\n  });\r\n  return (\r\n    <div>\r\n      <MDBEdgeHeader\r\n        color=\"red lighten-5\"\r\n        className=\"sectionPage\"\r\n        style={{ height: 100 }}\r\n      />\r\n      <div className=\"mt-3 mb-5\">\r\n        <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n          <MDBFreeBird>\r\n            <MDBRow>\r\n              <MDBCol\r\n                md=\"10\"\r\n                className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n              >\r\n                <MDBCardBody>\r\n                  {JSON.stringify(localStorage.getItem(\"profile-line\"))}\r\n                  <MDBCol className={isMeeting ? \"hidden\" : \"\"}>\r\n                    <h6 className=\"h6-responsive mb-4 text-center\">\r\n                      <strong className=\"font-weight-bold text-primary\">\r\n                        กรุณา Scan QR Code เพื่อเข้าร่วมประชุม\r\n                      </strong>\r\n                    </h6>\r\n                  </MDBCol>\r\n                  {\"USERID : \"+ userid}\r\n                  <div className={!isMeeting ? \"hidden\" : \"\"}>\r\n                    <MDBCol md=\"12\">\r\n                      <blockquote className=\"blockquote bq-primary\">\r\n                        <p className=\"bq-title\" style={{ fontSize: \"16px\" }}>\r\n                          {meetingRoom}\r\n                        </p>\r\n                        <strong style={{ fontSize: \"16px\" }}>\r\n                          หัวข้อ {meetingHost}\r\n                        </strong>\r\n                        <div>\r\n                          <strong style={{ fontSize: \"14px\" }}>\r\n                            {startdate === enddate\r\n                              ? \"วันที่ \" + startdate\r\n                              : \"ระหว่างวันที่ \" + startdate + \" - \" + enddate}\r\n                          </strong>\r\n                        </div>\r\n                        <div>\r\n                          <small style={{ fontSize: \"14px\" }}>\r\n                            เวลา {starttime} - {endtime}\r\n                          </small>\r\n                        </div>\r\n                        <div>\r\n                          <small style={{ fontSize: \"14px\" }}>\r\n                            เข้าประชุมแล้ว {humenTotal}/{humanAmount} คน\r\n                          </small>\r\n                        </div>\r\n                      </blockquote>\r\n                    </MDBCol>\r\n                    <MDBCol className=\"text-center\">\r\n                      <div>\r\n                        <span\r\n                          className={\r\n                            isTimeMeeting === 0\r\n                              ? \"hidden\"\r\n                              : isTimeMeeting === 1\r\n                              ? \"text-primary\"\r\n                              : \"text-danger\"\r\n                          }\r\n                        >\r\n                          {isTimeMeeting === 1\r\n                            ? \"สามารถเช็คอินเข้าห้องประชุมได้ก่อน 30 นาที\"\r\n                            : \"จบการประชุมแล้ว\"}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-success\">\r\n                          {isCheckIn !== \"\" ? \"เช็คอินเมื่อ \" + isCheckIn : \"\"}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"mt-3\">\r\n                        <span className=\"text-danger\">\r\n                          {isCheckOut !== \"\"\r\n                            ? \"เช็คเอาท์เมื่อ \" + isCheckOut\r\n                            : \"\"}\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        className={\r\n                          isTimeMeeting === 1 || isTimeMeeting === 2\r\n                            ? \"hidden\"\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <MDBBtn\r\n                          gradient=\"blue\"\r\n                          size=\"sm\"\r\n                          className={isCheckIn !== \"\" ? \"hidden\" : \"\"}\r\n                          onClick={() => checkIn(userid, docno)}\r\n                        >\r\n                          Check-in\r\n                        </MDBBtn>\r\n                        <MDBBtn\r\n                          size=\"sm\"\r\n                          color=\"danger\"\r\n                          className={isCheckOut !== \"\" ? \"hidden\" : \"\"}\r\n                          onClick={() => checkOut(userid, docno)}\r\n                        >\r\n                          Check-out\r\n                        </MDBBtn>\r\n                      </div>\r\n                    </MDBCol>\r\n                  </div>\r\n                </MDBCardBody>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBFreeBird>\r\n        </MDBAnimation>\r\n        <div className={isMeeting ? \"footer hidden\" : \"footer\"}>\r\n          <MDBCol className=\"text-center\">\r\n            <MDBBtn\r\n              floating=\"true\"\r\n              gradient=\"blue\"\r\n              rounded\r\n              color=\"danger\"\r\n              onClick={() =>\r\n                (window.location = \"https://line.me/R/nv/QRCodeReader\")\r\n              }\r\n            >\r\n              <MDBIcon icon=\"qrcode\" size=\"4x\" />\r\n              <br />\r\n              <strong className=\"ml-2\" style={{ paddingBottom: \"15px\" }}>\r\n                SCAN QR Code\r\n              </strong>\r\n            </MDBBtn>\r\n          </MDBCol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBAnimation,\r\n  MDBBtn,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport config from \"../config\";\r\nimport \"./ProfilePage.css\";\r\nimport DefaultImg from \"../assets/default-image.jpg\";\r\nconst jwt = require(\"jsonwebtoken\");\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userid: \"\",\r\n      pname: \"\",\r\n      fname: \"\",\r\n      lname: \"\",\r\n      idcard: \"\",\r\n      email: \"\",\r\n      position: \"\",\r\n      department: \"\",\r\n      government: \"\",\r\n      phone: \"\",\r\n      isChange: false\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.LoadDataUser = this.LoadDataUser.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    let names = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [names]: val });\r\n  }\r\n  submitHandler(event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    const {\r\n      userid,\r\n      pname,\r\n      fname,\r\n      lname,\r\n      idcard,\r\n      email,\r\n      position,\r\n      department,\r\n      government,\r\n      phone,\r\n    } = this.state;\r\n    const formData = {\r\n      userid: userid,\r\n      idcard: idcard,\r\n      pname: pname,\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n      position: position,\r\n      department: department,\r\n      government: government,\r\n      phone: phone,\r\n    };\r\n    const base_url = `${config.main_config.APP_URL}/user/update`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios.post(base_url, formData, { headers: header }).then((resp) => {\r\n      if (resp.data.code === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(resp.data.data.token));\r\n        localStorage.setItem(\"userid\", JSON.stringify(resp.data.data.userid));\r\n        Swal.fire({\r\n          title: \"แก้ไขข้อมูลเรียบร้อย\",\r\n          text: \"กรุณารอสักครู่...\",\r\n          icon: \"success\",\r\n          showConfirmButton: false,\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 1000);\r\n      } else if (resp.data.code === 400) {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.msg,\r\n          icon: \"warning\",\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.error,\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n  LoadDataUser() {\r\n    const user = localStorage.getItem(\"user\");\r\n    if (user) {\r\n      const decoded = jwt.verify(\r\n        JSON.parse(user),\r\n        config.main_config.TOKEN_APP\r\n      );\r\n      this.setState({\r\n        userid: decoded.userid,\r\n        pname: decoded.pname,\r\n        fname: decoded.fname,\r\n        lname: decoded.lname,\r\n        idcard: decoded.idcard,\r\n        email: decoded.email,\r\n        position: decoded.position,\r\n        department: decoded.department,\r\n        government: decoded.government,\r\n        phone: decoded.phone,\r\n      });\r\n    }else{\r\n      this.props.history.push(\"/reh-1meeting-app/register\");\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.LoadDataUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MDBEdgeHeader\r\n          color=\"red lighten-5\"\r\n          className=\"sectionPage\"\r\n          style={{ height: 100 }}\r\n        />\r\n        <div className=\"mt-3 mb-5\">\r\n          <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n            <MDBFreeBird>\r\n              <MDBRow>\r\n                <MDBCol\r\n                  md=\"10\"\r\n                  className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n                >\r\n                  <MDBCardBody>\r\n                    <MDBCol className=\"text-center\">\r\n                      <img\r\n                        src={DefaultImg}\r\n                        width=\"150\"\r\n                        height=\"150\"\r\n                        alt=\"\"\r\n                        className=\"rounded-circle\"\r\n                      />\r\n                    </MDBCol>\r\n                    <MDBCol md=\"12\">\r\n                      <h4 className=\"font-weight-bold mb-4 text-center\">\r\n                        John Doe\r\n                      </h4>\r\n                      <h5 className=\"text-primary\">ข้อมูลส่วนตัว</h5>\r\n                      <form className=\"needs-validation\" onSubmit={this.submitHandler}>\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"pname\" className=\"grey-text\">\r\n                              คำนำหน้า <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.pname}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.pname}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"pname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"fname\" className=\"grey-text\">\r\n                              ชื่อ <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.fname}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.fname}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"fname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"lname\" className=\"grey-text\">\r\n                              นามสกุล <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.lname}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.lname}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"lname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"grey-text\">\r\n                              เลขบัตรประชาชน{\" \"}\r\n                              <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.idcard}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"number\"\r\n                              value={this.state.idcard}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"idcard\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"grey-text\">\r\n                              อีเมล <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.email}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"email\"\r\n                              value={this.state.email}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"email\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"position\" className=\"grey-text\">\r\n                              ตำแหน่ง <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.position}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.position}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"position\"\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"department\" className=\"grey-text\">\r\n                              หน่วยงาน <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.department}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.department}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"department\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"main_company\" className=\"grey-text\">\r\n                              ส่วนราชการ <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.government}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.government}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"government\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"phone_number\" className=\"grey-text\">\r\n                              เบอร์โทร\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.phone}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.phone}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"phone\"\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        {this.state.isChange === true ? (\r\n                          <MDBBtn\r\n                            gradient=\"blue\"\r\n                            type=\"submit\"\r\n                          >\r\n                            บันทึกแก้ไข\r\n                          </MDBBtn>\r\n                        ) : (\r\n                          <strong\r\n                            onClick={() => this.setState({ isChange: true })}\r\n                            className=\"btn btn-outline-success\"\r\n                          >\r\n                            แก้ไขข้อมูล\r\n                          </strong>\r\n                        )}\r\n                      </form>\r\n                    </MDBCol>\r\n                  </MDBCardBody>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBFreeBird>\r\n          </MDBAnimation>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport config from \"../config\";\r\nimport liff from \"@line/liff\";\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBAnimation,\r\n  MDBBtn,\r\n} from \"mdbreact\";\r\n\r\nconst RegisterPage = () => {\r\n  const history = useHistory();\r\n  const [userid, setUserID] = useState(\"\");\r\n  const [pname, setPname] = useState(\"นาย\");\r\n  const [fname, setFname] = useState(\"ปัสธร\");\r\n  const [lname, setLname] = useState(\"หวานอารมย์\");\r\n  const [idcard, setIDcard] = useState(\"1450700219182\");\r\n  const [email, setEmail] = useState(\"passathorn.dev@gmail.com\");\r\n  const [position, setPosition] = useState(\"นักวิชาการคอมพิวเตอร์ปฏิบัติการ\");\r\n  const [department, setDepartment] = useState(\"ศูนย์คอมพิวเตอร์\");\r\n  const [government, setGovernment] = useState(\"โรงพยาบาลร้อยเอ็ด\");\r\n  const [phone, setPhoneNumber] = useState(\"0859271305\");\r\n\r\n  const CheckUser = async () => {\r\n    const base_url = `${config.main_config.APP_URL}/user`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    await axios\r\n      .post(base_url, { userid: userid }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.data.length > 0) {\r\n          setUserID(resp.data.data[0].userId);\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify(resp.data.data[0].data_info)\r\n          );\r\n          localStorage.setItem(\r\n            \"userid\",\r\n            JSON.stringify(resp.data.data[0].userId)\r\n          );\r\n          history.push(\"/reh-1meeting-app\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    const formData = {\r\n      userid: userid,\r\n      idcard: idcard,\r\n      pname: pname,\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n      position: position,\r\n      department: department,\r\n      government: government,\r\n      phone: phone,\r\n    };\r\n    const base_url = `${config.main_config.APP_URL}/user/register`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios.post(base_url, formData, { headers: header }).then((resp) => {\r\n      if (resp.data.code === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(resp.data.data.token));\r\n        localStorage.setItem(\"userid\", JSON.stringify(resp.data.data.userid));\r\n        Swal.fire({\r\n          title: \"บันทึกข้อมูลเรียบร้อย\",\r\n          text: \"กรุณารอสักครู่...\",\r\n          icon: \"success\",\r\n        });\r\n        history.push(\"/reh-1meeting-app\");\r\n      } else if (resp.data.code === 400) {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.msg,\r\n          icon: \"warning\",\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.error,\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const InitailizeLiff = () => {\r\n    liff.init(\r\n      {\r\n        liffId: \"1655384297-05KyLy7Z\",\r\n      },\r\n      () => {\r\n        liff.getProfile().then((profile) => {\r\n          setUserID(profile.userId);\r\n          localStorage.setItem(\"profile-line\", JSON.stringify(profile));\r\n        });\r\n      },\r\n      (err) => alert(err.message)\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    CheckUser();\r\n    InitailizeLiff();\r\n  });\r\n  return (\r\n    <div>\r\n      <MDBEdgeHeader\r\n        color=\"red lighten-5\"\r\n        className=\"sectionPage\"\r\n        style={{ height: 100 }}\r\n      />\r\n      <div className=\"mt-3 mb-5\">\r\n        <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n          <MDBFreeBird>\r\n            <MDBRow>\r\n              <MDBCol\r\n                md=\"10\"\r\n                className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n              >\r\n                <MDBCardBody>\r\n                  <MDBCol md=\"12\">\r\n                    {userid}\r\n                    <h5 className=\"text-primary\">ลงทะเบียนผู้ใช้งานใหม่</h5>\r\n                    <form className=\"needs-validation\" onSubmit={submitHandler}>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"pname\" className=\"grey-text\">\r\n                            คำนำหน้า <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setPname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={pname}\r\n                            className=\"form-control\"\r\n                            name=\"pname\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"fname\" className=\"grey-text\">\r\n                            ชื่อ <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setFname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={fname}\r\n                            className=\"form-control\"\r\n                            name=\"fname\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"lname\" className=\"grey-text\">\r\n                            นามสกุล <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setLname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={lname}\r\n                            className=\"form-control\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"email\" className=\"grey-text\">\r\n                            เลขบัตรประชาชน{\" \"}\r\n                            <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setIDcard(text.target.value)}\r\n                            type=\"number\"\r\n                            value={idcard}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"email\" className=\"grey-text\">\r\n                            อีเมล <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setEmail(text.target.value)}\r\n                            type=\"email\"\r\n                            value={email}\r\n                            className=\"form-control\"\r\n                          />\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            อีเมลที่สามารถติดต่อได้จริง\r\n                          </small>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"position\" className=\"grey-text\">\r\n                            ตำแหน่ง <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setPosition(text.target.value)}\r\n                            type=\"text\"\r\n                            value={position}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"department\" className=\"grey-text\">\r\n                            หน่วยงาน <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setDepartment(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={department}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"main_company\" className=\"grey-text\">\r\n                            ส่วนราชการ <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setGovernment(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={government}\r\n                            className=\"form-control\"\r\n                            readOnly\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"phone_number\" className=\"grey-text\">\r\n                            เบอร์โทร\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setPhoneNumber(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={phone}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBBtn gradient=\"blue\" type=\"submit\">\r\n                        บันทึก\r\n                      </MDBBtn>\r\n                    </form>\r\n                  </MDBCol>\r\n                </MDBCardBody>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBFreeBird>\r\n        </MDBAnimation>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { Route, Switch} from 'react-router-dom';\r\n\r\nimport HomePage from './pages/HomePage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport RegisterPage from './pages/RegisterPage';\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={HomePage} />\r\n        <Route exact path='/reh-1meeting-app' component={HomePage} />\r\n        <Route exact path='/reh-1meeting-app/profile' component={ProfilePage} />\r\n        <Route exact path='/reh-1meeting-app/register' component={RegisterPage} />\r\n        <Route\r\n          render={function() {\r\n            return <h1>Page Not Found</h1>;\r\n          }}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n} from \"mdbreact\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport liff from \"@line/liff\";\r\nimport DefaultImg from \"./assets/default-image.jpg\";\r\nimport Routes from \"./Routes\";\r\nconst pkgVersion = require(\"../package.json\").version;\r\nclass App extends Component {\r\n  state = {\r\n    collapseID: \"\",\r\n    displayName: \"\",\r\n    urlPicture: \"\"\r\n  };\r\n\r\n  toggleCollapse = (collapseID) => () =>\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\",\r\n    }));\r\n\r\n  closeCollapse = (collID) => () => {\r\n    const { collapseID } = this.state;\r\n    window.scrollTo(0, 0);\r\n    collapseID === collID && this.setState({ collapseID: \"\" });\r\n  };\r\n  componentDidMount() {\r\n    \r\n  }\r\n  render() {\r\n    const overlay = (\r\n      <div\r\n        id=\"sidenav-overlay\"\r\n        style={{ backgroundColor: \"transparent\" }}\r\n        onClick={this.toggleCollapse(\"mainNavbarCollapse\")}\r\n      />\r\n    );\r\n\r\n    const { collapseID } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"flyout\">\r\n          <MDBNavbar\r\n            color=\"red accent-3\"\r\n            dark\r\n            expand=\"md\"\r\n            fixed=\"top\"\r\n            scrolling\r\n          >\r\n            <MDBNavbarBrand href=\"/reh-1meeting-app\" className=\"py-0 font-weight-bold\">\r\n              <strong className=\"align-middle\">REH 1Meeting</strong>&nbsp;\r\n              <strong style={{ fontSize: \"12px\" }}>{\"v.\" + pkgVersion}</strong>\r\n            </MDBNavbarBrand>\r\n            <MDBNavbarToggler\r\n              onClick={this.toggleCollapse(\"mainNavbarCollapse\")}\r\n            />\r\n            <MDBCollapse id=\"mainNavbarCollapse\" isOpen={collapseID} navbar>\r\n              <MDBNavbarNav right>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    exact\r\n                    to=\"/reh-1meeting-app/meeting-history\"\r\n                    onClick={this.closeCollapse(\"mainNavbarCollapse\")}\r\n                  >\r\n                    <strong>ประวัติเข้าประชุม</strong>\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    exact\r\n                    to=\"/reh-1meeting-app/profile\"\r\n                    onClick={this.closeCollapse(\"mainNavbarCollapse\")}\r\n                  >\r\n                    <strong>sguk</strong>\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNavbarNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n          {collapseID && overlay}\r\n          <main style={{ marginTop: \"4rem\" }}>\r\n            <div className=\"mt-2 mr-2\" style={{ textAlign: \"right\" }}>\r\n              <Link\r\n                to=\"/reh-1meeting-app/profile\"\r\n                style={{ fontSize: \"14px\", cursor: \"pointer\" }}\r\n              >\r\n                <img\r\n                  src={DefaultImg}\r\n                  width=\"45\"\r\n                  height=\"45\"\r\n                  alt=\"\"\r\n                  className=\"rounded-circle mr-1\"\r\n                />\r\n                SGUKZ\r\n              </Link>\r\n            </div>\r\n            <Routes />\r\n          </main>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/default-image.440b9b23.jpg\";"],"sourceRoot":""}